// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    //Define versions in a single place
    ext {
        //Sdk and tools
        compileSdkVersion = 27
        buildToolsVersion = '26.0.2'
        minSdkVersion = 19
        targetSdkVersion = 27

        //plugins
        androidPluginVersion = '3.0.1'

        //testing
        jUnitVersion = '4.12'
        espressoVersion = '2.2.2'

        //instrumentation
        androidSupportLibrary = '26.0.1'
        constraintLayoutVersion = '1.0.2'
        androidAnnotationsVersion = '4.3.1'
        supportMultidexVersion = '1.0.1'
        daggerVersion = '2.12'
        mvpMosbyVersion = '2.0.1'
        rxAndroidVersion = '1.2.0'
        rxJavaVersion = '1.1.5'
        retrofitVersion = '2.1.0'
        okHttpVersion = '3.9.0'
        gsonVersion = '2.7'
        picassoVersion = '2.5.2'
        calliGraphyVersion = '2.3.0'
        circleimageview = '2.1.0'
        roundedimageviewVersion = '2.3.0'
        saripaarVersion = '2.0.3'
        playServicesVersion = '11.6.0'
        mapsUtilsVersion = '0.5'
        realmVersion = '3.1.2'
        switchButtonVersion = '2.0.0'
        maskedEditTextVersion = '1.0.1'
        threetenVersion = '1.0.5'
        ciceroneVersion = '1.2.1'
        hawkVersion = '1.23'
        eventBusVersion = '3.1.1'
        mixPanelVersion = '5.+'
        twitterSdkVersion = '3.1.1'

        plugins = [
                androidPlugin    : "com.android.tools.build:gradle:${androidPluginVersion}",
                realm            : "io.realm:realm-gradle-plugin:${realmVersion}",
                picker           : "com.novoda:bintray-release:0.8.0",
        ]

        dependencies = [
                //testing
                junit             : "junit:junit:${jUnitVersion}",
                espresso          : "com.android.support.test.espresso:espresso-core:${espressoVersion}",

                //instrumentation
                supportAppcompat  : "com.android.support:appcompat-v7:${androidSupportLibrary}",
                supportDesign     : "com.android.support:design:${androidSupportLibrary}",
                constraintLayout  : "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}",
                androidAnnotations: "org.androidannotations:androidannotations:${androidAnnotationsVersion}",
                supportMultidex   : "com.android.support:multidex:${supportMultidexVersion}",
                dagger            : "com.google.dagger:dagger:${daggerVersion}",
                daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
                mvpMosby          : "com.hannesdorfmann.mosby:mvp:${mvpMosbyVersion}",
                rxAndroid         : "io.reactivex:rxandroid:${rxAndroidVersion}",
                rxJava            : "io.reactivex:rxjava:${rxJavaVersion}",
                retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
                retrofitAdapter   : "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}",
                retrofitConverter : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
                okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
                okHttpLogging     : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
                gson              : "com.google.code.gson:gson:${gsonVersion}",
                picasso           : "com.squareup.picasso:picasso:${picassoVersion}",
                calliGraphy       : "uk.co.chrisjenx:calligraphy:${calliGraphyVersion}",
                cardView          : "com.android.support:cardview-v7:${androidSupportLibrary}",
                circleimageview   : "de.hdodenhof:circleimageview:${circleimageview}",
                roundedimageview  : "com.makeramen:roundedimageview:${roundedimageviewVersion}",
                recyclerview      : "com.android.support:recyclerview-v7:${androidSupportLibrary}",
                saripaar          : "com.mobsandgeeks:android-saripaar:${saripaarVersion}",
                switchButton      : "com.kyleduo.switchbutton:library:${switchButtonVersion}",
                maskedEditText    : "com.github.santalu:mask-edittext:${maskedEditTextVersion}",
                //Google play services
                playServicesMaps     : "com.google.android.gms:play-services-maps:${playServicesVersion}",
                playServicesMapsUtils: "com.google.maps.android:android-maps-utils:${mapsUtilsVersion}",
                playServicesLocation : "com.google.android.gms:play-services-location:${playServicesVersion}",
                playServicesPlaces   : "com.google.android.gms:play-services-places:${playServicesVersion}",
                playServicesGcm      : "com.google.android.gms:play-services-gcm:${playServicesVersion}",
                threeten             : "com.jakewharton.threetenabp:threetenabp:${threetenVersion}",
                cicerone             : "ru.terrakok.cicerone:cicerone:${ciceroneVersion}",
                hawk                 : "com.github.orhanobut:hawk:${hawkVersion}",
                eventBus             : "org.greenrobot:eventbus:${eventBusVersion}",
                mixPanel             : "com.mixpanel.android:mixpanel-android:${mixPanelVersion}",
                twitterSdk        : "com.twitter.sdk.android:twitter:${twitterSdkVersion}",
        ]
    }

    repositories {
        jcenter()
        mavenCentral()
        google()
        maven { url "https://maven.google.com" }
    }

    dependencies {
        classpath project.ext.plugins.androidPlugin
        classpath project.ext.plugins.realm
        classpath project.ext.plugins.picker
    }

}

allprojects {
    repositories {
        jcenter()
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://maven.google.com" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        //noinspection ChangeToOperator
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)
                || "com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = false
        }
    }
}

